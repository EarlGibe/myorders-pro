openapi: 3.0.0
info:
  title: Gestione Clienti API
  description: API per la gestione dei clienti
  version: 1.0.0

paths:
  /clienti:
    get:
      summary: Recupera tutti i clienti
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
        '404':
          description: Lista clienti vuota
      tags:
        - Clienti

    post:
      summary: Crea un nuovo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteInput'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  createdCliente:
                    $ref: '#/components/schemas/ClienteOutput'
        '400':
          description: Errore di validazione
      tags:
        - Clienti

    put:
      summary: Aggiorna tutti i clienti
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteInput'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  n:
                    type: number
                  nModified:
                    type: number
                  ok:
                    type: number
        '400':
          description: Errore di validazione
      tags:
        - Clienti

    delete:
      summary: Elimina tutti i clienti
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                type: object
                properties:
                  n:
                    type: number
                  ok:
                    type: number
        '400':
          description: Errore di validazione
      tags:
        - Clienti

  /clienti/{id}:
    get:
      summary: Recupera un cliente tramite ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del cliente
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente non trovato
      tags:
        - Clienti

    put:
      summary: Aggiorna un cliente tramite ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteInput'
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '400':
          description: Errore di validazione
      tags:
        - Clienti

    delete:
      summary: Elimina un cliente tramite ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID del cliente
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        '404':
          description: Cliente non trovato
      tags:
        - Clienti

  /clienti/filtered/queryNome/{nome}:
    get:
      summary: Recupera clienti filtrati per nome o cognome
      parameters:
        - in: path
          name: nome
          required: true
          schema:
            type: string
          description: Nome o cognome del cliente da cercare
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
        '404':
          description: Lista clienti filtrata vuota
      tags:
        - Clienti

  /clienti/filtered/queryNome/{nome}/paesi/{paese}/regioni/{regione}/province/{provincia}:
    get:
      summary: Recupera clienti filtrati per nome o cognome, paese, regione e provincia
      parameters:
        - in: path
          name: nome
          required: true
          schema:
            type: string
          description: Nome o cognome del cliente da cercare
        - in: path
          name: paese
          required: true
          schema:
            type: string
          description: Paese del cliente da filtrare
        - in: path
          name: regione
          required: true
          schema:
            type: string
          description: Regione del cliente da filtrare
        - in: path
          name: provincia
          required: true
          schema:
            type: string
          description: Provincia del cliente da filtrare
      responses:
        '200':
          description: Successo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'
        '404':
          description: Lista clienti filtrata vuota
      tags:
        - Clienti

components:
  schemas:
    Cliente:
      type: object
      properties:
        _id:
          type: string
        nome:
          type: string
        cognome:
          type: string
        paese:
          type: string
        regione:
          type: string
        provincia:
          type: string
        anagrafica:
          type: object
        status:
          type: boolean
        dataInserimento:
          type: string
          format: date-time

    ClienteInput:
      type: object
      properties:
        nome:
          type: string
          required: true
        cognome:
          type: string
          required: true
        paese:
          type: string
          required: true
        regione:
          type: string
          required: true
        provincia:
          type: string
          required: true
        anagrafica:
          type: object
          required: true
        status:
          type: boolean

    ClienteOutput:
      type: object
      properties:
        risultato:
          $ref: '#/components/schemas/Cliente'
        request:
          type: object
          properties:
            type:
              type: string
            url:
              type: string
